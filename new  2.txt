

var 
	express = require('express')
  ,	app = express.createServer()
  , MemoryStore = express.session.MemoryStore
  , io = require('socket.io')
  , sessionStore = new MemoryStore()
  , redis = require('redis');
  


 
app.configure(function () {
    app.use(express.cookieParser());
    app.use(express.session({secret: 'secret', key: 'express.sid'}));
	app.post('/signin', function (req, res) {
		res.send('hello');
	});
});
 
app.listen(8000);
var sio = io.listen(app);
 
sio.sockets.on('connection', function (socket) {
    console.log('A socket connected!');
});

var parseCookie = require('connect').utils.parseCookie;
sio.set('authorization', function (data, accept) {
    if (data.headers.cookie) {
        data.cookie = parseCookie(data.headers.cookie);
        data.sessionID = data.cookie['express.sid'];
        // (literally) get the session data from the session store
        sessionStore.get(data.sessionID, function (err, session) {
            if (err || !session) {
                // if we cannot grab a session, turn down the connection
                accept('Error', false);
            } else {
                // save the session data and accept the connection
                data.session = session;
                accept(null, true);
            }
        });
    } else {
       return accept('No cookie transmitted.', false);
    }
});
  
 
app.use(express.bodyParser());
app.listen(8000);

subscribe_playerid = redis.createClient();
subscribe_message = redis.createClient();
  

subscribe_playerid.subscribe("playerid");
subscribe_message.subscribe("message");

sio.sockets.on('connection', function (socket) {
    subscribe_message.on('message' , function(channel,message) {
	socket.join(channel.room)
	Room = channel.room
	console(Room);
	socket.broadcast.to(Room).emit('news', message);
	
	
	});
    subscribe_message.on('disconnect' , function() {
	console.log('disconnected...');
	socket.connect();
	console.log('...reconnected');
	});
 
});
